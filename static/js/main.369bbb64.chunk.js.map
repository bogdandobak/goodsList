{"version":3,"sources":["components/ModalWindow/ModalWindow.jsx","api/api.js","components/ProductDetails/ProductDetails.jsx","components/ProductsList/ProductsList.jsx","components/Sorter/Sorter.jsx","components/ProductForm/ProductForm.jsx","App.jsx","index.jsx"],"names":["ModalWindow","onDelete","id","useState","open","setOpen","Modal","basic","onClose","onOpen","size","trigger","Button","Header","icon","Icon","name","Content","className","Actions","color","inverted","onClick","BASE_URL","request","url","a","fetch","response","json","result","deleteProduct","method","createProduct","newProduct","headers","body","JSON","stringify","getProductDetails","getComments","ProductDetails","Route","productId","params","enum","ProductDetailRoute","product","setProduct","comments","setComments","useEffect","then","Card","Image","src","imageUrl","wrapped","ui","Description","map","comment","description","Input","placeholder","ProductsList","sortedBy","ProductListRoute","match","products","onHandlePage","handlePage","useCallback","item","List","verticalAlign","sort","current","next","localeCompare","count","Item","avatar","weight","to","link","linksData","uniqid","title","Sorter","ProductForm","onCreate","width","height","inputQuery","setInputQuery","handleChange","event","target","value","prevQuery","handleClose","onSubmit","Form","preventDefault","Group","widths","label","type","onChange","required","App","setProducts","setProductId","prevProducts","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.369bbb64.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, Header, Icon, Modal,\n} from 'semantic-ui-react';\nimport './ModalWindow.scss';\n\nexport const ModalWindow = ({ onDelete, id }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleDelete = () => {\n    onDelete(id);\n    setOpen(false);\n  };\n  return (\n    <Modal\n      basic\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      size=\"small\"\n      trigger={<Button>Delete</Button>}\n    >\n      <Header icon>\n        <Icon name=\"archive\" />\n        Delete product\n      </Header>\n      <Modal.Content>\n        <p className=\"text\">\n          Are you sure you want to delete this product?\n        </p>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button basic color=\"red\" inverted onClick={() => setOpen(false)}>\n          <Icon name=\"remove\" />\n          {' '}\n          No\n        </Button>\n        <Button color=\"green\" inverted onClick={handleDelete}>\n          <Icon name=\"checkmark\" />\n          {' '}\n          Yes\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nModalWindow.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","/* eslint-disable no-console */\nconst BASE_URL = 'https://60645e8ff0919700177857e1.mockapi.io/';\n\n// eslint-disable-next-line consistent-return\nconst request = async (url) => {\n  const response = await fetch(`${BASE_URL}${url}`);\n\n  const result = await response.json();\n\n  return result;\n};\n\nexport const deleteProduct = async (id) => {\n  const response = await fetch(\n    `${BASE_URL}/products/${id}`,\n    { method: 'DELETE' },\n  );\n\n  return response;\n};\n\nexport const createProduct = async (newProduct) => {\n  const response = await fetch(`${BASE_URL}/products`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=utf-8',\n    },\n    body: JSON.stringify(newProduct),\n  });\n\n  const result = await response.json();\n\n  return result;\n};\n\nexport const getProductDetails = async (url, id) => {\n  const response = await fetch(`${BASE_URL}${url}/${id}`);\n\n  const result = await response.json();\n\n  return result;\n};\n\nexport const getComments = async (url, id) => {\n  const response = await fetch(`${BASE_URL}products/${id}/${url}`);\n\n  const result = await response.json();\n\n  return result;\n};\n\nexport const getProducts = () => request('products');\n","import React, { useState, useEffect } from 'react';\nimport {\n  Button, Card, Image, Input,\n} from 'semantic-ui-react';\nimport { Route } from 'react-router-hoc';\nimport { getProductDetails, getComments } from '../../api/api';\n\nconst ProductDetailRoute = Route({\n  productId: Route.params.enum(),\n}, ({ productId }) => `/${productId}`);\n\nexport const ProductDetails = ProductDetailRoute(({ productId }) => {\n  const [product, setProduct] = useState({});\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    getProductDetails('products', productId)\n      .then(setProduct);\n  }, []);\n\n  useEffect(() => {\n    getComments('comments', productId)\n      .then(setComments);\n  }, []);\n\n  return (\n    <Card>\n      <Image src={product.imageUrl} wrapped ui={false} />\n      <Card.Content>\n        <Card.Header>{product.name}</Card.Header>\n        <Card.Description>\n          {comments.map((comment) => (\n            <p key={comment.id}>\n              {comment.description}\n            </p>\n          ))}\n        </Card.Description>\n      </Card.Content>\n      <Input placeholder=\"Add comment\" />\n      <Button>\n        Edit\n      </Button>\n    </Card>\n  );\n});\n","/* eslint-disable array-callback-return */\n/* eslint-disable consistent-return */\nimport React, { useCallback } from 'react';\nimport { List, Image } from 'semantic-ui-react';\nimport { Route } from 'react-router-hoc';\nimport { Link } from 'react-router-dom';\nimport { ModalWindow } from '../ModalWindow';\nimport { ProductDetails } from '../ProductDetails';\n\nconst ProductListRoute = Route({\n  sortedBy: Route.params.enum('none', 'name', 'count'),\n}, ({ sortedBy }) => `/${sortedBy}`);\n\nexport const ProductsList = ProductListRoute(({\n  match: { params: { sortedBy } },\n  products,\n  onDelete,\n  onHandlePage,\n}) => {\n  const handlePage = useCallback(\n    (item) => {\n      onHandlePage(item);\n    }, [],\n  );\n\n  return (\n    <List verticalAlign=\"middle\" size=\"big\">\n      {products && products.sort((current, next) => {\n        switch (sortedBy) {\n          case 'name':\n            return current.name.localeCompare(next.name);\n\n          case 'count':\n            return current.count - next.count;\n\n          default:\n            break;\n        }\n      }).map((product) => (\n        <>\n          <List.Item key={product.id}>\n            <Image avatar src={product.imageUrl} />\n            <List.Content>\n              <List.Header>{product.name}</List.Header>\n              <List.Description>\n                {`Count: ${product.count}, weight: ${product.weight}`}\n              </List.Description>\n              <Link\n                to={ProductDetails.link({ productId: product.id })}\n                onClick={() => handlePage(product.id)}\n              >\n                Product Description\n              </Link>\n              <ModalWindow id={product.id} onDelete={onDelete} />\n            </List.Content>\n          </List.Item>\n        </>\n      ))}\n    </List>\n  );\n});\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Button } from 'semantic-ui-react';\nimport uniqid from 'uniqid';\nimport { ProductsList } from '../ProductsList';\nimport './Sorter.scss';\n\nconst linksData = [\n  { sortedBy: 'name', id: uniqid(), title: 'Sorted by name' },\n  { sortedBy: 'count', id: uniqid(), title: 'Sorted by count' },\n];\n\nexport const Sorter = () => (\n  <ul className=\"sorters\">\n    {linksData.map((sort) => (\n      <li key={sort.id}>\n        <NavLink\n          to={ProductsList.link({ sortedBy: sort.sortedBy })}\n        >\n          <Button>\n            {sort.title}\n          </Button>\n        </NavLink>\n      </li>\n    ))}\n  </ul>\n);\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, Header, Icon, Modal, Form,\n} from 'semantic-ui-react';\nimport uniqid from 'uniqid';\n\nexport const ProductForm = ({ onCreate }) => {\n  const [open, setOpen] = useState(false);\n  const [inputQuery, setInputQuery] = useState({\n    imageUrl: '',\n    name: '',\n    count: '',\n    width: '',\n    height: '',\n    weight: '',\n  });\n\n  const handleChange = useCallback(\n    (event) => {\n      const { value, name } = event.target;\n\n      setInputQuery((prevQuery) => ({\n        ...prevQuery,\n        [name]: value,\n      }));\n    }, [],\n  );\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const {\n      imageUrl,\n      name,\n      count,\n      weight,\n      height,\n      width,\n    } = inputQuery;\n\n    if (imageUrl && name && count && weight && height && width) {\n      const newProduct = {\n        id: uniqid(),\n        comments: [],\n        imageUrl,\n        name,\n        count,\n        size: {\n          height,\n          width,\n        },\n        weight,\n      };\n\n      onCreate(newProduct);\n      setOpen(false);\n      setInputQuery({\n        imageUrl: '',\n        name: '',\n        count: '',\n        width: '',\n        height: '',\n        weight: '',\n      });\n    }\n  };\n\n  const handleClose = useCallback(\n    () => {\n      setOpen(false);\n      setInputQuery({\n        imageUrl: '',\n        name: '',\n        count: '',\n        width: '',\n        height: '',\n        weight: '',\n      });\n    },\n    [],\n  );\n\n  return (\n    <Modal\n      onSubmit={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      size=\"small\"\n      trigger={<Button>New Product</Button>}\n    >\n      <Header icon>\n        <Icon name=\"server\" />\n        Create Product\n      </Header>\n      <Modal.Content>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group widths=\"equal\">\n            <Form.Input\n              label=\"Image url\"\n              placeholder=\"Image url\"\n              type=\"url\"\n              name=\"imageUrl\"\n              value={inputQuery.imageUrl}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              label=\"Product name\"\n              placeholder=\"Product name\"\n              type=\"text\"\n              name=\"name\"\n              value={inputQuery.name}\n              onChange={handleChange}\n              required\n            />\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Input\n              label=\"Count\"\n              placeholder=\"Count\"\n              type=\"number\"\n              name=\"count\"\n              value={inputQuery.count}\n              onChange={handleChange}\n              required\n            />\n\n            <Form.Input\n              label=\"Width\"\n              placeholder=\"Width\"\n              type=\"number\"\n              name=\"width\"\n              value={inputQuery.width}\n              onChange={handleChange}\n              required\n            />\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Input\n              label=\"Height\"\n              placeholder=\"Height\"\n              type=\"number\"\n              name=\"height\"\n              value={inputQuery.height}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              label=\"Weight\"\n              placeholder=\"Weight\"\n              type=\"text\"\n              name=\"weight\"\n              value={inputQuery.weight}\n              onChange={handleChange}\n              required\n            />\n          </Form.Group>\n          <Button>Save</Button>\n          <Button onClick={handleClose}>\n            Cancel\n          </Button>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nProductForm.propTypes = {\n  onCreate: PropTypes.func.isRequired,\n};\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Switch, Redirect } from 'react-router-dom';\nimport './App.scss';\nimport { ProductsList } from './components/ProductsList';\nimport { Sorter } from './components/Sorter';\nimport { deleteProduct, getProducts, createProduct } from './api/api';\nimport { ProductForm } from './components/ProductForm';\nimport { ProductDetails } from './components/ProductDetails';\n\nexport const App = () => {\n  const [products, setProducts] = useState([]);\n  const [productId, setProductId] = useState(0);\n\n  useEffect(() => {\n    getProducts()\n      .then(setProducts);\n  }, []);\n\n  const onDelete = useCallback(\n    (id) => {\n      deleteProduct(id);\n      setProducts((prevProducts) => prevProducts.filter((product) => product.id !== id));\n    }, [products],\n  );\n\n  const onCreate = useCallback(\n    (newProduct) => {\n      createProduct(newProduct);\n      setProducts((prevProducts) => [...prevProducts, newProduct]);\n    }, [],\n  );\n\n  const onHandlePage = useCallback(\n    (id) => {\n      setProductId(id);\n    }, [productId],\n  );\n\n  return (\n    <div className=\"App\">\n      <h1>Products</h1>\n      <Sorter />\n      <ProductForm onCreate={onCreate} />\n      <Switch>\n        <ProductsList products={products} onDelete={onDelete} onHandlePage={onHandlePage} />\n        <ProductDetails productId={productId} products={products} />\n        <Redirect to={ProductsList.link({ sortedBy: 'none' })} />\n      </Switch>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}