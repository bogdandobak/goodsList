{"version":3,"sources":["components/ModalWindow/ModalWindow.jsx","api/api.js","components/CommentForm/CommentForm.jsx","components/ProductFormEdit/ProductFormEdit.jsx","components/ProductDetails/ProductDetails.jsx","components/ProductsList/ProductsList.jsx","components/Sorter/Sorter.jsx","components/ProductForm/ProductForm.jsx","App.jsx","index.jsx"],"names":["ModalWindow","onDelete","id","useState","open","setOpen","Modal","basic","onClose","onOpen","size","trigger","Button","Header","icon","Icon","name","Content","className","Actions","color","inverted","onClick","BASE_URL","request","url","a","fetch","response","json","result","deleteProduct","method","createProduct","newProduct","headers","body","JSON","stringify","getProductDetails","getComments","createComment","newComment","deleteComment","productId","commentId","CommentForm","onCreateComment","commentText","setCommentText","handleChange","useCallback","event","value","target","handleClose","onSubmit","Form","preventDefault","uniqid","description","date","Date","Group","widths","Input","label","placeholder","type","onChange","required","ProductFormEdit","onCreate","product","imageUrl","count","width","height","weight","inputQuery","setInputQuery","prevQuery","ProductDetails","Route","params","enum","ProductDetailsRoute","setProduct","comments","setComments","show","setShow","useEffect","timer1","setTimeout","clearTimeout","then","prevComments","filter","comment","Card","Image","src","wrapped","ui","Description","length","map","Loader","active","ProductsList","sortedBy","ProductListRoute","match","products","onHandlePage","handlePage","item","sort","current","next","localeCompare","List","verticalAlign","Item","avatar","to","link","linksData","title","Sorter","ProductForm","App","setProducts","setProductId","prevProducts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71f915d4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, Header, Icon, Modal,\n} from 'semantic-ui-react';\nimport './ModalWindow.scss';\n\nexport const ModalWindow = ({ onDelete, id }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleDelete = () => {\n    onDelete(id);\n    setOpen(false);\n  };\n  return (\n    <Modal\n      basic\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      size=\"small\"\n      trigger={<Button>Delete</Button>}\n    >\n      <Header icon>\n        <Icon name=\"archive\" />\n        Delete product\n      </Header>\n      <Modal.Content>\n        <p className=\"text\">\n          Are you sure you want to delete this product?\n        </p>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button basic color=\"red\" inverted onClick={() => setOpen(false)}>\n          <Icon name=\"remove\" />\n          {' '}\n          No\n        </Button>\n        <Button color=\"green\" inverted onClick={handleDelete}>\n          <Icon name=\"checkmark\" />\n          {' '}\n          Yes\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nModalWindow.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","/* eslint-disable no-console */\nconst BASE_URL = 'https://60645e8ff0919700177857e1.mockapi.io/';\n\n// eslint-disable-next-line consistent-return\nconst request = async (url) => {\n  const response = await fetch(`${BASE_URL}${url}`);\n\n  const result = await response.json();\n\n  return result;\n};\n\nexport const deleteProduct = async (id) => {\n  const response = await fetch(\n    `${BASE_URL}/products/${id}`,\n    { method: 'DELETE' },\n  );\n\n  return response;\n};\n\nexport const createProduct = async (newProduct) => {\n  const response = await fetch(`${BASE_URL}/products`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=utf-8',\n    },\n    body: JSON.stringify(newProduct),\n  });\n\n  const result = await response.json();\n\n  return result;\n};\n\nexport const getProductDetails = async (url, id) => {\n  const response = await fetch(`${BASE_URL}${url}/${id}`);\n\n  const result = await response.json();\n\n  return result;\n};\n\nexport const getComments = async (url, id) => {\n  const response = await fetch(`${BASE_URL}products/${id}/${url}`);\n\n  const result = await response.json();\n\n  return result;\n};\n\nexport const createComment = async (newComment, id) => {\n  const response = await fetch(`${BASE_URL}/products/${id}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=utf-8',\n    },\n    body: JSON.stringify(newComment),\n  });\n\n  const result = await response.json();\n\n  return result;\n};\n\nexport const deleteComment = async (productId, commentId) => {\n  const response = await fetch(\n    `${BASE_URL}/products/${productId}/comments/${commentId}`,\n    { method: 'DELETE' },\n  );\n\n  return response;\n};\n\nexport const getProducts = () => request('products');\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, Header, Icon, Modal, Form,\n} from 'semantic-ui-react';\nimport uniqid from 'uniqid';\n\nexport const CommentForm = ({ onCreateComment, productId }) => {\n  const [open, setOpen] = useState(false);\n  const [commentText, setCommentText] = useState('');\n\n  const handleChange = useCallback(\n    (event) => {\n      const { value } = event.target;\n\n      setCommentText(value);\n    }, [],\n  );\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (commentText) {\n      const newComment = {\n        id: uniqid(),\n        productId,\n        description: commentText,\n        date: new Date(),\n      };\n\n      onCreateComment(newComment);\n      setOpen(false);\n      setCommentText('');\n    }\n  };\n\n  const handleClose = useCallback(\n    () => {\n      setOpen(false);\n      setCommentText('');\n    },\n    [],\n  );\n\n  return (\n    <Modal\n      onSubmit={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      size=\"small\"\n      trigger={<Button>Add Comment</Button>}\n    >\n      <Header icon>\n        <Icon name=\"server\" />\n        Leave your feedback\n      </Header>\n      <Modal.Content>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group widths=\"equal\">\n            <Form.Input\n              label=\"Comment\"\n              placeholder=\"Comment\"\n              type=\"text\"\n              value={commentText}\n              onChange={handleChange}\n              required\n            />\n          </Form.Group>\n          <Button>Save</Button>\n          <Button onClick={handleClose}>\n            Cancel\n          </Button>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nCommentForm.propTypes = {\n  onCreateComment: PropTypes.func.isRequired,\n  productId: PropTypes.string.isRequired,\n};\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, Header, Icon, Modal, Form,\n} from 'semantic-ui-react';\n\nexport const ProductFormEdit = ({ onCreate, product }) => {\n  const [open, setOpen] = useState(false);\n  const [inputQuery, setInputQuery] = useState({\n    imageUrl: product.imageUrl,\n    name: product.name,\n    count: product.count,\n    width: product.size.width,\n    height: product.size.height,\n    weight: product.weight,\n  });\n\n  const handleChange = useCallback(\n    (event) => {\n      const { value, name } = event.target;\n\n      setInputQuery((prevQuery) => ({\n        ...prevQuery,\n        [name]: value,\n      }));\n    }, [],\n  );\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const {\n      imageUrl,\n      name,\n      count,\n      weight,\n      height,\n      width,\n    } = inputQuery;\n\n    if (imageUrl && name && count && weight && height && width) {\n      const newProduct = {\n        id: product.id,\n        imageUrl,\n        name,\n        count,\n        size: {\n          height,\n          width,\n        },\n        weight,\n      };\n\n      onCreate(newProduct);\n      setOpen(false);\n      setInputQuery({\n        imageUrl: product.imageUrl,\n        name: product.name,\n        count: product.count,\n        width: product.size.width,\n        height: product.size.height,\n        weight: product.weight,\n      });\n    }\n  };\n\n  const handleClose = useCallback(\n    () => {\n      setOpen(false);\n      setInputQuery({\n        imageUrl: product.imageUrl,\n        name: product.name,\n        count: product.count,\n        width: product.size.width,\n        height: product.size.height,\n        weight: product.weight,\n      });\n    },\n    [],\n  );\n\n  return (\n    <Modal\n      onSubmit={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      size=\"small\"\n      trigger={<Button>Edit Product</Button>}\n    >\n      <Header icon>\n        <Icon name=\"server\" />\n        Edit Product\n      </Header>\n      <Modal.Content>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group widths=\"equal\">\n            <Form.Input\n              label=\"Image url\"\n              placeholder=\"Image url\"\n              type=\"url\"\n              name=\"imageUrl\"\n              value={inputQuery.imageUrl}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              label=\"Product name\"\n              placeholder=\"Product name\"\n              type=\"text\"\n              name=\"name\"\n              value={inputQuery.name}\n              onChange={handleChange}\n              required\n            />\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Input\n              label=\"Count\"\n              placeholder=\"Count\"\n              type=\"number\"\n              name=\"count\"\n              value={inputQuery.count}\n              onChange={handleChange}\n              required\n            />\n\n            <Form.Input\n              label=\"Width\"\n              placeholder=\"Width\"\n              type=\"number\"\n              name=\"width\"\n              value={inputQuery.width}\n              onChange={handleChange}\n              required\n            />\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Input\n              label=\"Height\"\n              placeholder=\"Height\"\n              type=\"number\"\n              name=\"height\"\n              value={inputQuery.height}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              label=\"Weight\"\n              placeholder=\"Weight\"\n              type=\"text\"\n              name=\"weight\"\n              value={inputQuery.weight}\n              onChange={handleChange}\n              required\n            />\n          </Form.Group>\n          <Button>Save</Button>\n          <Button onClick={handleClose}>\n            Cancel\n          </Button>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nProductFormEdit.propTypes = {\n  onCreate: PropTypes.func.isRequired,\n  product: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    count: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    size: PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      height: PropTypes.number.isRequired,\n    }).isRequired,\n    weight: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Button, Card, Image, Loader,\n} from 'semantic-ui-react';\nimport { Route } from 'react-router-hoc';\nimport {\n  getProductDetails, getComments, createComment, deleteComment, deleteProduct, createProduct,\n} from '../../api/api';\nimport { CommentForm } from '../CommentForm';\nimport { ProductFormEdit } from '../ProductFormEdit';\n\nconst ProductDetailsRoute = Route({\n  productId: Route.params.enum(),\n}, ({ productId }) => `/${productId}`);\n\nexport const ProductDetails = ProductDetailsRoute(({ productId }) => {\n  const [product, setProduct] = useState({});\n  const [comments, setComments] = useState([]);\n\n  const [show, setShow] = useState(false);\n\n  useEffect(\n    () => {\n      const timer1 = setTimeout(() => setShow(true), 3000);\n\n      return () => {\n        clearTimeout(timer1);\n      };\n    }, [],\n  );\n\n  useEffect(() => {\n    getProductDetails('products', productId)\n      .then(setProduct);\n  }, []);\n\n  useEffect(() => {\n    getComments('comments', productId)\n      .then(setComments);\n  }, []);\n\n  useEffect(() => {\n    setProduct(product);\n  }, [product]);\n\n  const onCreateComment = useCallback(\n    (newComment) => {\n      createComment(newComment, productId);\n      setComments((prevComments) => [...prevComments, newComment]);\n    }, [],\n  );\n\n  const onDelete = useCallback(\n    (id) => {\n      deleteComment(productId, id);\n      setComments((prevComments) => prevComments.filter((comment) => comment.id !== id));\n    }, [comments],\n  );\n\n  const onCreate = useCallback(\n    (newProduct) => {\n      deleteProduct(productId);\n      createProduct(newProduct);\n      setProduct(newProduct);\n    }, [],\n  );\n\n  return show ? (\n    <Card>\n      <Image src={product.imageUrl} wrapped ui={false} />\n      <Card.Content>\n        <Card.Header>{product.name}</Card.Header>\n        <Card.Description>\n          {`Count: ${product.count}, Width: ${product.size.width}, Height: ${product.size.height}, Weight: ${product.weight} `}\n        </Card.Description>\n        <p>\n          Comments:\n        </p>\n        {comments.length > 0 && comments.map((comment) => (\n          <Card.Description key={comment.id}>\n            <p>\n              {comment.description}\n            </p>\n            <Button size=\"mini\" onClick={() => onDelete(comment.id)}>\n              Delete\n            </Button>\n          </Card.Description>\n        ))}\n      </Card.Content>\n      <CommentForm onCreateComment={onCreateComment} productId={productId} />\n      <ProductFormEdit onCreate={onCreate} product={product} />\n    </Card>\n  ) : (\n    <Loader active />\n  );\n});\n","/* eslint-disable array-callback-return */\n/* eslint-disable consistent-return */\nimport React, { useCallback } from 'react';\nimport { List, Image } from 'semantic-ui-react';\nimport { Route } from 'react-router-hoc';\nimport { Link } from 'react-router-dom';\nimport { ModalWindow } from '../ModalWindow';\nimport { ProductDetails } from '../ProductDetails';\n\nconst ProductListRoute = Route({\n  sortedBy: Route.params.enum('', 'name', 'count'),\n}, ({ sortedBy }) => `/${sortedBy}`);\n\nexport const ProductsList = ProductListRoute(({\n  match: { params: { sortedBy } },\n  products,\n  onDelete,\n  onHandlePage,\n}) => {\n  const handlePage = useCallback(\n    (item) => {\n      onHandlePage(item);\n    }, [],\n  );\n\n  return (\n    <div className=\"container\">\n      {products && products.sort((current, next) => {\n        switch (sortedBy) {\n          case 'name':\n            return current.name.localeCompare(next.name);\n\n          case 'count':\n            return current.count - next.count;\n\n          default:\n            break;\n        }\n      }).map((product) => (\n        <List verticalAlign=\"middle\" size=\"big\" key={product.id}>\n          <List.Item key={product.id}>\n            <Image avatar src={product.imageUrl} />\n            <List.Content>\n              <List.Header>{product.name}</List.Header>\n              <List.Description>\n                {`Count: ${product.count}, weight: ${product.weight}`}\n              </List.Description>\n              <Link\n                to={ProductDetails.link({ productId: product.id })}\n                onClick={() => handlePage(product.id)}\n              >\n                Product Description\n              </Link>\n              <ModalWindow id={product.id} onDelete={onDelete} />\n            </List.Content>\n          </List.Item>\n        </List>\n      ))}\n    </div>\n  );\n});\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Button } from 'semantic-ui-react';\nimport uniqid from 'uniqid';\nimport { ProductsList } from '../ProductsList';\nimport './Sorter.scss';\n\nconst linksData = [\n  { sortedBy: 'name', id: uniqid(), title: 'Sorted by name' },\n  { sortedBy: 'count', id: uniqid(), title: 'Sorted by count' },\n];\n\nexport const Sorter = () => (\n  <ul className=\"sorters\">\n    {linksData.map((sort) => (\n      <li key={sort.id}>\n        <NavLink\n          to={ProductsList.link({ sortedBy: sort.sortedBy })}\n        >\n          <Button>\n            {sort.title}\n          </Button>\n        </NavLink>\n      </li>\n    ))}\n  </ul>\n);\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, Header, Icon, Modal, Form,\n} from 'semantic-ui-react';\nimport uniqid from 'uniqid';\n\nexport const ProductForm = ({ onCreate }) => {\n  const [open, setOpen] = useState(false);\n  const [inputQuery, setInputQuery] = useState({\n    imageUrl: '',\n    name: '',\n    count: '',\n    width: '',\n    height: '',\n    weight: '',\n  });\n\n  const handleChange = useCallback(\n    (event) => {\n      const { value, name } = event.target;\n\n      setInputQuery((prevQuery) => ({\n        ...prevQuery,\n        [name]: value,\n      }));\n    }, [],\n  );\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const {\n      imageUrl,\n      name,\n      count,\n      weight,\n      height,\n      width,\n    } = inputQuery;\n\n    if (imageUrl && name && count && weight && height && width) {\n      const newProduct = {\n        id: uniqid(),\n        imageUrl,\n        name,\n        count,\n        size: {\n          height,\n          width,\n        },\n        weight,\n      };\n\n      onCreate(newProduct);\n      setOpen(false);\n      setInputQuery({\n        imageUrl: '',\n        name: '',\n        count: '',\n        width: '',\n        height: '',\n        weight: '',\n      });\n    }\n  };\n\n  const handleClose = useCallback(\n    () => {\n      setOpen(false);\n      setInputQuery({\n        imageUrl: '',\n        name: '',\n        count: '',\n        width: '',\n        height: '',\n        weight: '',\n      });\n    },\n    [],\n  );\n\n  return (\n    <Modal\n      onSubmit={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      size=\"small\"\n      trigger={<Button>New Product</Button>}\n    >\n      <Header icon>\n        <Icon name=\"server\" />\n        Create Product\n      </Header>\n      <Modal.Content>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group widths=\"equal\">\n            <Form.Input\n              label=\"Image url\"\n              placeholder=\"Image url\"\n              type=\"url\"\n              name=\"imageUrl\"\n              value={inputQuery.imageUrl}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              label=\"Product name\"\n              placeholder=\"Product name\"\n              type=\"text\"\n              name=\"name\"\n              value={inputQuery.name}\n              onChange={handleChange}\n              required\n            />\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Input\n              label=\"Count\"\n              placeholder=\"Count\"\n              type=\"number\"\n              name=\"count\"\n              value={inputQuery.count}\n              onChange={handleChange}\n              required\n            />\n\n            <Form.Input\n              label=\"Width\"\n              placeholder=\"Width\"\n              type=\"number\"\n              name=\"width\"\n              value={inputQuery.width}\n              onChange={handleChange}\n              required\n            />\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Input\n              label=\"Height\"\n              placeholder=\"Height\"\n              type=\"number\"\n              name=\"height\"\n              value={inputQuery.height}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              label=\"Weight\"\n              placeholder=\"Weight\"\n              type=\"text\"\n              name=\"weight\"\n              value={inputQuery.weight}\n              onChange={handleChange}\n              required\n            />\n          </Form.Group>\n          <Button>Save</Button>\n          <Button onClick={handleClose}>\n            Cancel\n          </Button>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nProductForm.propTypes = {\n  onCreate: PropTypes.func.isRequired,\n};\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Switch, Redirect } from 'react-router-dom';\nimport './App.scss';\nimport { ProductsList } from './components/ProductsList';\nimport { Sorter } from './components/Sorter';\nimport { deleteProduct, getProducts, createProduct } from './api/api';\nimport { ProductForm } from './components/ProductForm';\nimport { ProductDetails } from './components/ProductDetails';\n\nexport const App = () => {\n  const [products, setProducts] = useState([]);\n  const [productId, setProductId] = useState(0);\n\n  useEffect(() => {\n    getProducts()\n      .then(setProducts);\n  }, []);\n\n  const onDelete = useCallback(\n    (id) => {\n      deleteProduct(id);\n      setProducts((prevProducts) => prevProducts.filter((product) => product.id !== id));\n    }, [products],\n  );\n\n  const onCreate = useCallback(\n    (newProduct) => {\n      createProduct(newProduct);\n      setProducts((prevProducts) => [...prevProducts, newProduct]);\n    }, [],\n  );\n\n  const onHandlePage = useCallback(\n    (id) => {\n      setProductId(id);\n    }, [productId],\n  );\n\n  return (\n    <div className=\"App\">\n      <h1>Products</h1>\n      <Sorter />\n      <ProductForm onCreate={onCreate} />\n      <Switch>\n        <ProductsList products={products} onDelete={onDelete} onHandlePage={onHandlePage} />\n        <ProductDetails productId={productId} products={products} />\n        <Redirect to={ProductsList.link({ sortedBy: '' })} />\n      </Switch>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}